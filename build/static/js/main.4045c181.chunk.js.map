{"version":3,"sources":["common.js","components/buttons/constants.js","components/buttons/Buttons.js","MyEditor.js","index.js"],"names":["MyEditorWrapper","styled","div","MyEditorContainer","MyEditorOutput","Container","Button","props","isActive","inlineStyles","label","style","styleMap","PINK","backgroundColor","DARK_RED","color","FONT_SIZE","fontSize","Buttons","editorState","updateEditorState","map","item","i","getCurrentInlineStyle","has","key","onClick","RichUtils","toggleInlineStyle","applyStyle","MyEditor","useState","EditorState","createEmpty","setEditorState","jsonField","setJsonField","placeholder","onChange","customStyleMap","rawDraftContentState","convertToRaw","getCurrentContent","toJson","blocks","className","text","inlineStyleRanges","offset","slice","length","ReactDOM","render","document","getElementById"],"mappings":"4lDAEO,IAAMA,EAAkBC,IAAOC,IAAV,KAQfC,EAAoBF,IAAOC,IAAV,KAYjBE,EAAiBH,IAAOC,IAAV,KAWdG,EAAYJ,IAAOC,IAAV,KAOTI,EAASL,IAAOC,IAAV,KAcjB,SAAAK,GAAK,OAAIA,EAAMC,UAAN,kKCtDEC,EAAe,CAC1B,CACEC,MAAO,OACPC,MAAO,QAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,UACPC,MAAO,QAET,CACED,MAAO,WACPC,MAAO,YAET,CACED,MAAO,YACPC,MAAO,cAIEC,EAAW,CACtBC,KAAM,CACJC,gBAAiB,WAEnBC,SAAU,CACRC,MAAO,WAETC,UAAW,CACTC,SAAU,SCzBP,SAASC,EAAT,GAAsD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,kBAWrC,OACE,kBAAChB,EAAD,KACGI,EAAaa,KAAI,SAACC,EAAMC,GAAP,OAChB,kBAAClB,EAAD,CACEE,UAVUG,EAUSY,EAAKZ,MATTS,EAAYK,wBAEbC,IAAIf,IASlBgB,IAAG,UAAKJ,EAAKb,MAAV,YAAmBc,GACtBI,QAAS,kBAjBE,SAACjB,GAClBU,EAAkBQ,YAAUC,kBAAkBV,EAAaT,IAgBtCoB,CAAWR,EAAKZ,SAE9BY,EAAKb,OAfG,IAACC,M,OCAb,SAASqB,IAAY,IAAD,EACaC,mBACpCC,cAAYC,eAFW,mBAClBf,EADkB,KACLgB,EADK,OAKSH,mBAAS,MALlB,mBAKlBI,EALkB,KAKPC,EALO,KAazB,OACE,kBAACtC,EAAD,KACE,kBAACmB,EAAD,CACEC,YAAaA,EACbC,kBAAmBe,IAErB,kBAACjC,EAAD,KACE,kBAAC,SAAD,CACEoC,YAAY,oBACZnB,YAAaA,EACboB,SAAUJ,EACVK,eAAgB7B,KAGpB,kBAACN,EAAD,CAAQsB,QAAS,kBApBN,WACb,IAAMc,EAAuBC,uBAAavB,EAAYwB,qBAEtDN,EAAaI,GAiBYG,KAAvB,UACA,kBAACzC,EAAD,KACGiC,GAAaA,EAAUS,OAAOxB,KAAI,SAAAC,GAAI,OACrC,yBAAKI,IAAKJ,EAAKI,KACb,0BAAMoB,UAAU,YAAhB,QAEG,IACAxB,EAAKyB,KAHR,KAMCzB,EAAK0B,kBAAkB3B,KAAI,SAAAX,GAAK,OAC/B,yBAAKgB,IAAG,UAAKJ,EAAKI,IAAV,YAAiBhB,EAAMuC,OAAvB,YAAiCvC,EAAMA,QAC7C,0CAEG,IACAY,EAAKyB,KAAKG,MAAMxC,EAAMuC,OAAQvC,EAAMyC,OAASzC,EAAMuC,QAHtD,KAMA,uCAEG,IACAvC,EAAMA,MACN,MAEH,+CAEG,IACAA,EAAMyC,OACN,MAEH,+CAEG,IACAzC,EAAMuC,OAHT,eChEhBG,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.4045c181.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const MyEditorWrapper = styled.div`\n  width: 1000px;\n  display: flex;\n  height: fit-content;\n  flex-direction: column;\n  margin-top: 3em;\n`;\n\nexport const MyEditorContainer = styled.div`\n  display: flex;\n  min-height: 9em;\n  border-radius: 0 0 3px 3px;\n  background-color: #fff;\n  padding: 5px;\n  margin: 10px 0;\n  font-size: 17px;\n  font-weight: 300;\n  box-shadow: 0 0 3px 1px rgba(15, 15, 15, 0.17);\n`;\n\nexport const MyEditorOutput = styled.div`\n  min-height: 9em;\n  border-radius: 0 0 3px 3px;\n  background-color: #fff;\n  padding: 5px;\n  margin: 10px 0;\n  font-size: 17px;\n  font-weight: 300;\n  box-shadow: 0 0 3px 1px rgba(15, 15, 15, 0.17);\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 7px;\n  margin-bottom: 8px;\n`;\n\nexport const Button = styled.div`\nwidth: 75px;\nheight: 25px;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nmargin-right: 10px;\nborder: 1px solid #34495e;\nbackground-color: #fff;\nfont-size: 16px;\nfont-family: Oxygen, sans-serif;\ntransition: all 0.3s ease-in-out;\ncursor: pointer;\n\n${props => props.isActive\n    && `transform: translateY(1px);\n    background-color: #9bc1f7;\n    box-shadow: none;\n    border: none;\n    box-shadow: 0 1px 11px 1px rgba(15, 15, 15, 0.2);`}\n    \n&:hover {\n  transform: translateY(1px);\n  background-color: #9bc1f7;\n  border: none;\n  box-shadow: 0 1px 11px 1px rgba(15, 15, 15, 0.2);\n}\n`;\n","export const inlineStyles = [\n  {\n    label: 'bold',\n    style: 'BOLD',\n  },\n  {\n    label: 'italic',\n    style: 'ITALIC',\n  },\n  {\n    label: 'pink-bg',\n    style: 'PINK',\n  },\n  {\n    label: 'red-text',\n    style: 'DARK_RED',\n  },\n  {\n    label: 'big-fsize',\n    style: 'FONT_SIZE',\n  },\n];\n\nexport const styleMap = {\n  PINK: {\n    backgroundColor: '#f8bbd0',\n  },\n  DARK_RED: {\n    color: '#880e4f',\n  },\n  FONT_SIZE: {\n    fontSize: '32px',\n  },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { RichUtils } from 'draft-js';\nimport { Container, Button } from '../../common';\nimport { inlineStyles } from './constants';\n\nexport function Buttons({ editorState, updateEditorState }) {\n  const applyStyle = (style) => {\n    updateEditorState(RichUtils.toggleInlineStyle(editorState, style));\n  };\n\n  const isActive = (style) => {\n    const currentStyle = editorState.getCurrentInlineStyle();\n\n    return currentStyle.has(style);\n  };\n\n  return (\n    <Container>\n      {inlineStyles.map((item, i) => (\n        <Button\n          isActive={isActive(item.style)}\n          // eslint-disable-next-line react/no-array-index-key\n          key={`${item.label}-${i}`}\n          onClick={() => applyStyle(item.style)}\n        >\n          {item.label}\n        </Button>\n      ))}\n    </Container>\n  );\n}\n\nButtons.propTypes = {\n  editorState: PropTypes.shape().isRequired,\n  updateEditorState: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\n\nimport { EditorState, Editor, convertToRaw } from 'draft-js';\nimport { Buttons } from './components/buttons/Buttons';\nimport { MyEditorWrapper,\n  MyEditorContainer,\n  Button,\n  MyEditorOutput } from './common';\nimport './MyEditor.scss';\nimport { styleMap } from './components/buttons/constants';\n\nexport function MyEditor() {\n  const [editorState, setEditorState] = useState(\n    EditorState.createEmpty(),\n  );\n\n  const [jsonField, setJsonField] = useState(null);\n\n  const toJson = () => {\n    const rawDraftContentState = convertToRaw(editorState.getCurrentContent());\n\n    setJsonField(rawDraftContentState);\n  };\n\n  return (\n    <MyEditorWrapper>\n      <Buttons\n        editorState={editorState}\n        updateEditorState={setEditorState}\n      />\n      <MyEditorContainer>\n        <Editor\n          placeholder=\"Enter you text...\"\n          editorState={editorState}\n          onChange={setEditorState}\n          customStyleMap={styleMap}\n        />\n      </MyEditorContainer>\n      <Button onClick={() => toJson()}>ToJSON</Button>\n      <MyEditorOutput>\n        {jsonField && jsonField.blocks.map(item => (\n          <div key={item.key}>\n            <span className=\"mainText\">\n              text:\n              {' '}\n              {item.text}\n              ;\n            </span>\n            {item.inlineStyleRanges.map(style => (\n              <div key={`${item.key}-${style.offset}-${style.style}`}>\n                <p>\n                  Styled text:\n                  {' '}\n                  {item.text.slice(style.offset, style.length + style.offset)}\n                  ;\n                </p>\n                <span>\n                  Style:\n                  {' '}\n                  {style.style}\n                  {', '}\n                </span>\n                <span>\n                  Styled length:\n                  {' '}\n                  {style.length}\n                  {', '}\n                </span>\n                <span>\n                  Styled offset:\n                  {' '}\n                  {style.offset}\n                  ;\n                </span>\n              </div>\n            ))}\n          </div>\n        ))}\n      </MyEditorOutput>\n    </MyEditorWrapper>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MyEditor } from './MyEditor';\n\nReactDOM.render(\n  <MyEditor />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}